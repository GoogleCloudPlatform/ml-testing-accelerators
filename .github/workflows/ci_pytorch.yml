# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pytorchTPU"
  pytorchTPU:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Grab latest code from master or pending PR.
      # NOTE: This affects only the code that runs here on the Github Action
      # machine. It will not affect the code that runs on the Docker image in
      # GKE. To do that, modify the Dockerfile tot checkout the desired code/branch.
      - name: Code checkout
        uses: actions/checkout@v2
        with:
          repository: GoogleCloudPlatform/ml-testing-accelerators
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x

      - name: Setup gcloud CLI
        if: false
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY_BASE64 }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      #########################################################################
      # Example of building and pushing a Docker image to use in GKE.
      # For our repo, this is not necessary since we build daily images using
      # Google Cloud Build and push them to gcr.
      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication.
      - name: Configure Docker
        if: false  # SKIP THIS STEP.
        run: |-
          gcloud --quiet auth configure-docker
        shell: bash
      - name: Build and Push Docker Image
        if: false  # SKIP THIS STEP.
        run: |
          cd ci_pytorch
          docker build --tag "$IMAGE:$GITHUB_RUN_ID" -f Dockerfile --build-arg "GITHUB_REF=$GITHUB_REF"  .
          docker push "$IMAGE:$GITHUB_RUN_ID"
        shell: bash
      #########################################################################

      - name: Install jsonnet
        run: |-
          go get github.com/google/go-jsonnet/cmd/jsonnet
        shell: bash
