# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"apiVersion": "batch/v1beta1"
"kind": "CronJob"
"metadata":
  "labels":
    "accelerator": "v3-8"
    "benchmarkId": "pt-r1.10-w2v2-conv-v3-8"
    "frameworkVersion": "pt-r1.10"
    "mode": "conv"
    "model": "w2v2"
  "name": "pt-r1.10-w2v2-conv-v3-8"
  "namespace": "automated"
"spec":
  "concurrencyPolicy": "Forbid"
  "jobTemplate":
    "metadata":
      "annotations":
        "ml-testing-accelerators/gcs-subdir": "pt-r1.10/w2v2/conv/v3-8"
        "ml-testing-accelerators/metric-config": |
          {
            "sources": [
              {
                "literals": {
                  "assertions": {
                    "duration": {
                      "inclusive_bounds": false,
                      "std_devs_from_mean": {
                        "comparison": "LESS",
                        "std_devs": 5
                      },
                      "wait_for_n_data_points": 10
                    }
                  }
                }
              },
              {
                "tensorboard": {
                  "aggregate_assertions": [
                    {
                      "assertion": {
                        "inclusive_bounds": false,
                        "std_devs_from_mean": {
                          "comparison": "LESS",
                          "std_devs": 5
                        },
                        "wait_for_n_data_points": 10
                      },
                      "strategy": "FINAL",
                      "tag": "ExecuteTime__Percentile_99_sec"
                    },
                    {
                      "assertion": {
                        "inclusive_bounds": true,
                        "std_devs_from_mean": {
                          "comparison": "LESS",
                          "std_devs": 0
                        },
                        "wait_for_n_data_points": 0
                      },
                      "strategy": "FINAL",
                      "tag": "aten_ops_sum"
                    }
                  ],
                  "exclude_tags": [
                    "LearningRate"
                  ],
                  "include_tags": [
                    {
                      "strategies": [
                        "FINAL"
                      ],
                      "tag_pattern": "*"
                    }
                  ],
                  "merge_runs": true
                }
              }
            ]
          }
      "labels":
        "accelerator": "v3-8"
        "benchmarkId": "pt-r1.10-w2v2-conv-v3-8"
        "frameworkVersion": "pt-r1.10"
        "mode": "conv"
        "model": "w2v2"
    "spec":
      "activeDeadlineSeconds": 72000
      "backoffLimit": 1
      "template":
        "metadata":
          "annotations":
            "reserved.cloud-tpus.google.com": "false"
            "tf-version.cloud-tpus.google.com": "pytorch-1.10"
        "spec":
          "containers":
          - "env":
            - "name": "POD_NAME"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.name"
            - "name": "POD_NAMESPACE"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.namespace"
            "image": "gcr.io/xl-ml-test/health-monitor:stable"
            "imagePullPolicy": "Always"
            "name": "monitor"
          - "args":
            - "/bin/bash"
            - "-c"
            - |
              set -u
              set -e
              set -x
              
              pip install omegaconf hydra-core soundfile
              sudo apt-get install -y libsndfile-dev
              git clone --recursive https://github.com/pytorch/fairseq.git
              pip install --editable fairseq
              export OMP_NUM_THREADS=1
              python fairseq/train.py \
                 /datasets/w2v2-librispeech-100hrs/w2v/manifest/ \
                 --num-batch-buckets 3 \
                 --tpu \
                 --max-sentences 4 \
                 --max-sentences-valid 4 \
                 --required-batch-size-multiple 4 \
                 --distributed-world-size 8 \
                 --distributed-port 12597 \
                 --update-freq 1 \
                 --enable-padding \
                 --log-interval 20 \
                 --num-workers 6 \
                 --task audio_pretraining \
                 --criterion wav2vec \
                 --arch wav2vec2 \
                 --log-keys  "['prob_perplexity','code_perplexity','temp']" \
                 --quantize-targets \
                 --extractor-mode default \
                 --conv-feature-layers '[(512, 10, 5)] + [(512, 3, 2)] * 4 + [(512,2,2)] * 2' \
                 --final-dim 256 \
                 --latent-vars 320 \
                 --latent-groups 2 \
                 --latent-temp '(2,0.5,0.999995)' \
                 --infonce \
                 --optimizer adam \
                 --adam-betas '(0.9,0.98)' \
                 --adam-eps 1e-06 \
                 --lr-scheduler polynomial_decay \
                 --total-num-update 400000 \
                 --lr 0.0005 \
                 --warmup-updates 32000 \
                 --mask-length 10 \
                 --mask-prob 0.65 \
                 --mask-selection static \
                 --mask-other 0 \
                 --mask-channel-prob 0.1 \
                 --encoder-layerdrop 0 \
                 --dropout-input 0.0 \
                 --dropout-features 0.0 \
                 --feature-grad-mult 0.1 \
                 --loss-weights '[0.1, 10]' \
                 --conv-pos 128 \
                 --conv-pos-groups 16 \
                 --num-negatives 100 \
                 --cross-sample-negatives 0 \
                 --max-sample-size 250000 \
                 --min-sample-size 32000 \
                 --dropout 0.0 \
                 --attention-dropout 0.0 \
                 --weight-decay 0.01 \
                 --max-tokens 1400000 \
                 --skip-invalid-size-inputs-valid-test \
                 --ddp-backend no_c10d \
                 --log-format simple \
                --max-update 50000 \
                2>&1 | tee training_logs.txt
              loss=$(
                cat training_logs.txt | grep '| loss ' | \
                tail -1 | sed 's/.*loss //' | cut -d '|' -f1
              )
              echo 'final loss is' $loss
              test $( echo $loss | cut -d '.' -f1 ) -lt 3
              
            "env":
            - "name": "POD_NAME"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.name"
            - "name": "POD_UID"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.uid"
            - "name": "POD_NAMESPACE"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.namespace"
            - "name": "JOB_NAME"
              "valueFrom":
                "fieldRef":
                  "fieldPath": "metadata.labels['job-name']"
            - "name": "MODEL_DIR"
              "value": "$(OUTPUT_BUCKET)/pt-r1.10/w2v2/conv/v3-8/$(JOB_NAME)"
            - "name": "XLA_USE_BF16"
              "value": "0"
            "envFrom":
            - "configMapRef":
                "name": "gcs-buckets"
            - "configMapRef":
                "name": "pytorch-nfs-ip"
            "image": "gcr.io/xl-ml-test/pytorch-xla:r1.10"
            "imagePullPolicy": "Always"
            "name": "train"
            "resources":
              "limits":
                "cloud-tpus.google.com/v3": 8
                "tpu.googleapis.com/v3": 8
              "requests":
                "cpu": "40.0"
                "memory": "300Gi"
            "volumeMounts":
            - "mountPath": "/dev/shm"
              "name": "dshm"
              "readOnly": false
            - "mountPath": "/datasets"
              "name": "pytorch-datasets-claim"
              "readOnly": true
          "initContainers": []
          "nodeSelector":
            "tpu-available": "true"
          "priorityClassName": "tpu-device"
          "restartPolicy": "Never"
          "volumes":
          - "emptyDir":
              "medium": "Memory"
            "name": "dshm"
          - "name": "pytorch-datasets-claim"
            "persistentVolumeClaim":
              "claimName": "pytorch-datasets-claim"
  "schedule": "0 7 * * 1,3,5"
  "successfulJobsHistoryLimit": 1