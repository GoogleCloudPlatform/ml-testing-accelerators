apiVersion: apps/v1
kind: Deployment
metadata:
  name: pytorch-datasets-nfs-server
  labels:
    app: pytorch-datasets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pytorch-datasets
      role: server
  template:
    metadata:
      labels:
        app: pytorch-datasets
        role: server
    spec:
      containers:
      - name: nfs-server
        image: k8s.gcr.io/volume-nfs:0.8
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /exports
          name: pytorch-datasets-disk
      volumes:
      - name: pytorch-datasets-disk
        gcePersistentDisk:
          pdName: pytorch-datasets-europe-west4-a
          fsType: ext4
---
kind: Service
apiVersion: v1
metadata:
  name: pytorch-datasets-server
  labels:
    app: pytorch-datasets
spec:
  clusterIP: None
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    app: pytorch-datasets
    role: server
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pytorch-datasets
  labels:
    app: pytorch-datasets
spec:
  capacity:
    storage: 1Mi
  accessModes:
  - ReadOnlyMany
  nfs:
    server: pytorch-datasets-server.default.svc.cluster.local
    path: "/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pytorch-datasets-claim
  labels:
    app: pytorch-datasets
spec:
  accessModes:
  - ReadOnlyMany
  volumeName: pytorch-datasets
  storageClassName: ""
  resources:
    requests:
      storage: 1Mi
